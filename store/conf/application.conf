# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.http.secret.key="[GskuJVKC90IWs5D]>b[`0vU4@@laq;l2^AWhDD0[^7_lS0;`E2l3855:uHCL0PU"

# The application languages
# ~~~~~
play.i18n.langs=["en"]
play.http.parser.maxMemoryBuffer = 5MB
# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

mongodb.uri="mongodb://localhost:27017/jaasuz-store"
mongodb.uri=${?MONGO_URI}
mongo-async-driver {
    akka {
        loggers = [ "akka.event.slf4j.Slf4jLogger" ]
        loglevel = DEBUG
    }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

play.filters.headers.frameOptions="ALLOW-FROM http://*"
play.filters.headers.contentSecurityPolicy="frame-src * ;"

# Registers the filters
# ~~~~~

# The application DI modules
# ~~~~~
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoModule"
play.modules.enabled += "play.modules.swagger.SwaggerModule"
play.modules.enabled += "com.dsleng.module.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"


play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"

play.filters.enabled += "play.filters.cors.CORSFilter"
#play.filters.disabled += "play.filters.csrf.CSRFFilter"


play.filters.hosts {
  allowed = ["."]
  #allowed = ["localhost:9000","192.168.1.11"]
  allowed = ["localhost:9000","149.28.59.50"]
  allowed = ["localhost:9001","149.28.59.50"]
}



#play.http.filters = "com.dsleng.utils.auth.Filters"
# play.filters.cors {
#   pathPrefixes = ["/some/path", ...]
#   allowedOrigins = ["http://www.example.com", ...]
#   allowedHttpMethods = ["GET", "POST"]
#   allowedHttpHeaders = ["Accept"]
#   preflightMaxAge = 3 days
# }
#play.filters.csrf.header.bypassHeaders {
#  X-Requested-With = "*"
#  Csrf-Token = "nocheck"
#}

#play.filters.cors {
  # allow all paths
#  pathPrefixes = ["/"]
 # allow all origins (You can specify if you want)
# allowedOrigins = null
# allowedHttpMethods = ["GET", "POST"]
 # allow all headers
# allowedHttpHeaders = null
#}  
#play.filters.enabled=[]

#play.filters.enabled += "play.filters.cors.CORSFilter"
# #play.http.filters = "com.dsleng.utils.auth.Filters"

# play.filters.cors {
#   # allow all paths
#   pathPrefixes = ["/"]
#  # allow all origins (You can specify if you want)
#  allowedOrigins = null
#  allowedHttpMethods = ["GET", "POST"]
#  # allow all headers
#  allowedHttpHeaders = null
# }  


#play.filters.hosts.allowed =  ["localhost:3000"]
# play.filters.cors {
#   pathPrefixes = ["/"]
#   allowedOrigins = ["http://localhost:3000"]
#   allowedHttpMethods = ["GET", "POST"]
#   allowedHttpHeaders = ["Accept"]
#   preflightMaxAge = 3 days
# }

# The asset configuration
# ~~~~~
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}

# Play mailer
play.mailer {
  host = "localhost" // (mandatory)
  port = 25 // (defaults to 25)
  ssl = no // (defaults to no)
  tls = no // (defaults to no)
  tlsRequired = no // (defaults to no)
  user = null // (optional)
  password = null // (optional)
  debug = no // (defaults to no, to take effect you also need to set the log level to "DEBUG" for the application logger)
  timeout = null // (defaults to 60s in milliseconds)
  connectiontimeout = null // (defaults to 60s in milliseconds)
  mock = true // (defaults to no, will only log all the email properties instead of sending an email)
}

# Swagger
#swagger.api.basepath="http://localhost:9000"
api.version=1.0
swagger.api.info = {
 contact : Suresh Pillay,
 description : Jaasuz api to access emotion and deception algorithms,
 title : Jaasuz REST API
}

include "silhouette.conf"



# API prefix to be used for all API routes
apiPrefix = "api"
